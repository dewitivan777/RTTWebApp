//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RTTWebApp.ServiceUser {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UseridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkMobileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUpdated {
            get {
                return this.DateUpdatedField;
            }
            set {
                if ((this.DateUpdatedField.Equals(value) != true)) {
                    this.DateUpdatedField = value;
                    this.RaisePropertyChanged("DateUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Userid {
            get {
                return this.UseridField;
            }
            set {
                if ((object.ReferenceEquals(this.UseridField, value) != true)) {
                    this.UseridField = value;
                    this.RaisePropertyChanged("Userid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkMobile {
            get {
                return this.WorkMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkMobileField, value) != true)) {
                    this.WorkMobileField = value;
                    this.RaisePropertyChanged("WorkMobile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class UserData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable UsersTableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable UsersTable {
            get {
                return this.UsersTableField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersTableField, value) != true)) {
                    this.UsersTableField = value;
                    this.RaisePropertyChanged("UsersTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSearchQuery", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class UserSearchQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RTTWebApp.ServiceUser.UserDetails UserQueryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RTTWebApp.ServiceUser.UserDetails UserQuery {
            get {
                return this.UserQueryField;
            }
            set {
                if ((object.ReferenceEquals(this.UserQueryField, value) != true)) {
                    this.UserQueryField = value;
                    this.RaisePropertyChanged("UserQuery");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAddressDetails", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class UserAddressDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Zipcode_PostalCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUpdated {
            get {
                return this.DateUpdatedField;
            }
            set {
                if ((this.DateUpdatedField.Equals(value) != true)) {
                    this.DateUpdatedField = value;
                    this.RaisePropertyChanged("DateUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Zipcode_PostalCode {
            get {
                return this.Zipcode_PostalCodeField;
            }
            set {
                if ((this.Zipcode_PostalCodeField.Equals(value) != true)) {
                    this.Zipcode_PostalCodeField = value;
                    this.RaisePropertyChanged("Zipcode_PostalCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAddress", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class UserAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable AddressTableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable AddressTable {
            get {
                return this.AddressTableField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTableField, value) != true)) {
                    this.AddressTableField = value;
                    this.RaisePropertyChanged("AddressTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportData", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceApp")]
    [System.SerializableAttribute()]
    public partial class ExportData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable ExportTableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable ExportTable {
            get {
                return this.ExportTableField;
            }
            set {
                if ((object.ReferenceEquals(this.ExportTableField, value) != true)) {
                    this.ExportTableField = value;
                    this.RaisePropertyChanged("ExportTable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceUser.IServiceUser")]
    public interface IServiceUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Get", ReplyAction="http://tempuri.org/IServiceUser/GetResponse")]
        RTTWebApp.ServiceUser.UserData Get(RTTWebApp.ServiceUser.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Get", ReplyAction="http://tempuri.org/IServiceUser/GetResponse")]
        System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserData> GetAsync(RTTWebApp.ServiceUser.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetAll", ReplyAction="http://tempuri.org/IServiceUser/GetAllResponse")]
        RTTWebApp.ServiceUser.UserDetails[] GetAll(RTTWebApp.ServiceUser.UserSearchQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetAll", ReplyAction="http://tempuri.org/IServiceUser/GetAllResponse")]
        System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserDetails[]> GetAllAsync(RTTWebApp.ServiceUser.UserSearchQuery query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetAddress", ReplyAction="http://tempuri.org/IServiceUser/GetAddressResponse")]
        RTTWebApp.ServiceUser.UserAddress GetAddress(RTTWebApp.ServiceUser.UserAddressDetails addressInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetAddress", ReplyAction="http://tempuri.org/IServiceUser/GetAddressResponse")]
        System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserAddress> GetAddressAsync(RTTWebApp.ServiceUser.UserAddressDetails addressInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetUserAddress", ReplyAction="http://tempuri.org/IServiceUser/GetUserAddressResponse")]
        RTTWebApp.ServiceUser.UserAddressDetails[] GetUserAddress(RTTWebApp.ServiceUser.UserAddressDetails addressInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetUserAddress", ReplyAction="http://tempuri.org/IServiceUser/GetUserAddressResponse")]
        System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserAddressDetails[]> GetUserAddressAsync(RTTWebApp.ServiceUser.UserAddressDetails addressInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetAllExportDetails", ReplyAction="http://tempuri.org/IServiceUser/GetAllExportDetailsResponse")]
        RTTWebApp.ServiceUser.ExportData GetAllExportDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetAllExportDetails", ReplyAction="http://tempuri.org/IServiceUser/GetAllExportDetailsResponse")]
        System.Threading.Tasks.Task<RTTWebApp.ServiceUser.ExportData> GetAllExportDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/InsertUserDetails", ReplyAction="http://tempuri.org/IServiceUser/InsertUserDetailsResponse")]
        bool InsertUserDetails(RTTWebApp.ServiceUser.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/InsertUserDetails", ReplyAction="http://tempuri.org/IServiceUser/InsertUserDetailsResponse")]
        System.Threading.Tasks.Task<bool> InsertUserDetailsAsync(RTTWebApp.ServiceUser.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/InsertUserAddress", ReplyAction="http://tempuri.org/IServiceUser/InsertUserAddressResponse")]
        bool InsertUserAddress(RTTWebApp.ServiceUser.UserAddressDetails addressInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/InsertUserAddress", ReplyAction="http://tempuri.org/IServiceUser/InsertUserAddressResponse")]
        System.Threading.Tasks.Task<bool> InsertUserAddressAsync(RTTWebApp.ServiceUser.UserAddressDetails addressInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Update", ReplyAction="http://tempuri.org/IServiceUser/UpdateResponse")]
        bool Update(RTTWebApp.ServiceUser.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Update", ReplyAction="http://tempuri.org/IServiceUser/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(RTTWebApp.ServiceUser.UserDetails userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Delete", ReplyAction="http://tempuri.org/IServiceUser/DeleteResponse")]
        bool Delete(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Delete", ReplyAction="http://tempuri.org/IServiceUser/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUserChannel : RTTWebApp.ServiceUser.IServiceUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUserClient : System.ServiceModel.ClientBase<RTTWebApp.ServiceUser.IServiceUser>, RTTWebApp.ServiceUser.IServiceUser {
        
        public ServiceUserClient() {
        }
        
        public ServiceUserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RTTWebApp.ServiceUser.UserData Get(RTTWebApp.ServiceUser.UserDetails userInfo) {
            return base.Channel.Get(userInfo);
        }
        
        public System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserData> GetAsync(RTTWebApp.ServiceUser.UserDetails userInfo) {
            return base.Channel.GetAsync(userInfo);
        }
        
        public RTTWebApp.ServiceUser.UserDetails[] GetAll(RTTWebApp.ServiceUser.UserSearchQuery query) {
            return base.Channel.GetAll(query);
        }
        
        public System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserDetails[]> GetAllAsync(RTTWebApp.ServiceUser.UserSearchQuery query) {
            return base.Channel.GetAllAsync(query);
        }
        
        public RTTWebApp.ServiceUser.UserAddress GetAddress(RTTWebApp.ServiceUser.UserAddressDetails addressInfo) {
            return base.Channel.GetAddress(addressInfo);
        }
        
        public System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserAddress> GetAddressAsync(RTTWebApp.ServiceUser.UserAddressDetails addressInfo) {
            return base.Channel.GetAddressAsync(addressInfo);
        }
        
        public RTTWebApp.ServiceUser.UserAddressDetails[] GetUserAddress(RTTWebApp.ServiceUser.UserAddressDetails addressInfo) {
            return base.Channel.GetUserAddress(addressInfo);
        }
        
        public System.Threading.Tasks.Task<RTTWebApp.ServiceUser.UserAddressDetails[]> GetUserAddressAsync(RTTWebApp.ServiceUser.UserAddressDetails addressInfo) {
            return base.Channel.GetUserAddressAsync(addressInfo);
        }
        
        public RTTWebApp.ServiceUser.ExportData GetAllExportDetails() {
            return base.Channel.GetAllExportDetails();
        }
        
        public System.Threading.Tasks.Task<RTTWebApp.ServiceUser.ExportData> GetAllExportDetailsAsync() {
            return base.Channel.GetAllExportDetailsAsync();
        }
        
        public bool InsertUserDetails(RTTWebApp.ServiceUser.UserDetails userInfo) {
            return base.Channel.InsertUserDetails(userInfo);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUserDetailsAsync(RTTWebApp.ServiceUser.UserDetails userInfo) {
            return base.Channel.InsertUserDetailsAsync(userInfo);
        }
        
        public bool InsertUserAddress(RTTWebApp.ServiceUser.UserAddressDetails addressInfo) {
            return base.Channel.InsertUserAddress(addressInfo);
        }
        
        public System.Threading.Tasks.Task<bool> InsertUserAddressAsync(RTTWebApp.ServiceUser.UserAddressDetails addressInfo) {
            return base.Channel.InsertUserAddressAsync(addressInfo);
        }
        
        public bool Update(RTTWebApp.ServiceUser.UserDetails userInfo) {
            return base.Channel.Update(userInfo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(RTTWebApp.ServiceUser.UserDetails userInfo) {
            return base.Channel.UpdateAsync(userInfo);
        }
        
        public bool Delete(string Id) {
            return base.Channel.Delete(Id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(string Id) {
            return base.Channel.DeleteAsync(Id);
        }
    }
}
